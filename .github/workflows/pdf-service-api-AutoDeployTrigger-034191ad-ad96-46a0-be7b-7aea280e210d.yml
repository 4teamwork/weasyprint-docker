name: Trigger auto deployment for pdf-service-api

on:
  push:
    branches: [master]
    paths:
      - "**"
      - ".github/workflows/pdf-service-api-AutoDeployTrigger-034191ad-ad96-46a0-be7b-7aea280e210d.yml"
  workflow_dispatch:

env:
  acr: crbccplatformprod

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Getting Credentials for Azure Container Registry
        id: acr
        uses: Azure/cli@v1.0.7
        with:
          inlineScript: |
            echo "login<<EOF" >> $GITHUB_OUTPUT
            echo "$(az acr login --name ${{env.acr}} --expose-token)" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ fromJSON(steps.acr.outputs.login).loginServer }}
          username: "00000000-0000-0000-0000-000000000000"
          password: ${{ fromJSON(steps.acr.outputs.login).accessToken }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          tags: |
            ${{ env.acr }}.azurecr.io/pdf-service:${{ github.sha }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: ./proxy/BccCode.PdfServer.Proxy/
          push: true
          tags: |
            ${{ env.acr }}.azurecr.io/pdf-service-proxy:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -n ca-pdf -g pdf-prod --container-name pdf-service --image ${{ env.acr }}.azurecr.io/pdf-service:${{ github.sha }}
            az containerapp update -n ca-pdf -g pdf-prod --container-name pdf-service-proxy --image ${{ env.acr }}.azurecr.io/pdf-service-proxy:${{ github.sha }}
